package com.assignment.assignment.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.assignment.assignment.models.Maintenance;
import com.assignment.assignment.models.OverdueAsset;
import com.assignment.assignment.repositories.OverdueAssetRepository;
import com.assignment.assignment.service.MaintenanceService;
import com.assignment.assignment.service.OverdueAssetService;

@RestController
@RequestMapping("api/overdueasset")
public class OverdueAssetController {
	// Pagination and sorting
	@Autowired
	OverdueAssetService service;
	
	@Autowired // This means to get the bean called userRepository
	// Which is auto-generated by Spring, we will use it to handle the data
	private OverdueAssetRepository overdueAssetRepository;
	
	@GetMapping
	public ResponseEntity<PaginationAssetOverdue> getAll(@RequestParam(defaultValue = "0") Integer pageNo,
			@RequestParam(defaultValue = "5") Integer pageSize, @RequestParam(defaultValue = "id") String sortBy) {
		List<OverdueAsset> list = service.getAll(pageNo, pageSize, sortBy);
		PaginationAssetOverdue pagination = new PaginationAssetOverdue();
		long totalRows = overdueAssetRepository.count();
		pagination.setList(list);
		pagination.setTotalRows(totalRows);
		pagination.setPagesize(5);
		return new ResponseEntity<PaginationAssetOverdue>(pagination, new HttpHeaders(), HttpStatus.OK);
	}
	
	@GetMapping(path = "/all")
	public List<OverdueAsset> findAll() {
		// This returns a JSON or XML with the users
		return (List<OverdueAsset>) overdueAssetRepository.findAll();
	}
	
	@PostMapping(path = "/add")
	public OverdueAsset AddOverdueAsset(@RequestBody OverdueAsset o) {
		OverdueAsset overdueAsset = new OverdueAsset(o.getId_asset(), o.getOverdue_month(), o.getOverdue_num_day());
		return this.overdueAssetRepository.save(overdueAsset);
	}
}

class PaginationAssetOverdue {
	private List<OverdueAsset> list;
	private long totalRows;
	private int Pagesize;
	
	PaginationAssetOverdue(){
		
	}

	public List<OverdueAsset> getList() {
		return list;
	}

	public void setList(List<OverdueAsset> list) {
		this.list = list;
	}

	public long getTotalRows() {
		return totalRows;
	}

	public void setTotalRows(long totalRows) {
		this.totalRows = totalRows;
	}

	public int getPagesize() {
		return Pagesize;
	}

	public void setPagesize(int pagesize) {
		Pagesize = pagesize;
	}
	
	
}

